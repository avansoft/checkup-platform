version: '3.9'

services:
  backend:
    image: ghcr.io/avansoft/flickit-platform:0.6.2
    ports:
      - 8000:8000
    volumes:
      - static-data:/vol/web
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG}
      - DB_HOST=db
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - EMAIL_HOST=${EMAIL_HOST}
      - DEFAULT_FROM_EMAIL=${DEFAULT_FROM_EMAIL}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - DOMAIN=${DOMAIN}
      - CELERY_BROKER_URL=redis://redis:6379/1
    depends_on:
      - db

  dsl:
      image: ghcr.io/avansoft/flickit-dsl-parser:0.0.1
      restart: on-failure
      ports:
        - 8080:8080

  db:
    image: postgres:11
    restart: always
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - 5432:5432

  redis:
    image: redis:alpine
  celery:
    restart: always
    image: ghcr.io/avansoft/flickit-platform:0.6.2
    command: celery -A assessmentplatform worker -l info
    volumes:
      - ./backend:/backend
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG}
      - DB_HOST=db
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - CELERY_BROKER_URL=redis://redis:6379/1
      - DOMAIN=${DOMAIN}
    depends_on:
      - db
      - redis
      - backend

  flower:
    image: ghcr.io/avansoft/flickit-platform:0.6.2
    command: celery -A assessmentplatform flower
    volumes:
      - ./backend:/backend
    depends_on:
      - backend
      - redis
      - celery
    environment:
      - DEBUG=${DEBUG}
      - CELERY_BROKER=redis://redis:6379/1
      - CELERY_BACKEND=redis://redis:6379/1
      - SECRET_KEY=${SECRET_KEY}
      - DB_HOST=db
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - DOMAIN=${DOMAIN}
    ports:
      - 5555:5555

  frontend:
    restart: always
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - frontend_build:/app/frontend/dist
    environment:
      - BASE_URL=http://backend:8000
    stdin_open: true
    depends_on:
      - backend

  nginx:
    image: nginx:latest
    ports:
      - 80:80
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - frontend_build:/var/www/frontend
    
    depends_on:
      - backend
      - frontend


volumes:
  postgres-data:
  static-data:
  frontend_build:
