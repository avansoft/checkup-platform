name: Python application

on:
  push:
    branches: ['*']
  pull_request:
    branches:
      - main

jobs:
  build-test:

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: github_actions
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r backend/requirements.txt
    - name: Run migrations
      env: 
        SECRET_KEY: test-secret-key
      run: python backend/apps/manage.py migrate
    - name: Run tests
      env: 
        SECRET_KEY: test-secret-key
      run: pytest backend/apps

  coverage:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: github_actions
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r backend/requirements.txt

    - name: Install coverage
      run: |
        pip install coverage

    - name: Run migrations
      env: 
        SECRET_KEY: test-secret-key
      run: python backend/apps/manage.py migrate

    - name: Run tests with coverage
      env: 
        SECRET_KEY: test-secret-key
      run: |
        coverage run backend/apps/manage.py test

    - name: Report coverage
      env: 
        SECRET_KEY: test-secret-key
      run: |
        coverage report --fail-under=50

  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'
      
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8
      
    - name: Run Flake8
      run: flake8 backend/apps --exclude=tests,*/migrations/*,assessmentplatform/settings.py

  sonarcloud:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PACKAGES_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

